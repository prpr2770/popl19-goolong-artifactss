prog(tmp,
 [	 decl(a0, int),
	decl(t, map(set(ps), int)),
	decl(id, map(set(ps), int)),
	decl(xT, map(set(ps), int)),
	decl(x, map(set(ps), int)),
	decl(ho, map(set(ps), int)),
	decl(ready, map(set(ps), int)),
	decl(decided, map(set(ps), int)),
	decl(inst, map(set(ps), int)),
	decl(k, map(set(ps), int)),
	decl(l, map(set(ps), int)),
	decl(m, map(set(ps), int)),
	decl(rwT,map(set(ps), int)),
	decl(rw,map(set(ps), int)),
	decl(rsuccess,map(set(ps), int)),
	decl(rwT,map(set(ps), int)),
	decl(rw,map(set(ps), int)),
	decl(rsuccess,map(set(ps), int)),
	decl(ps,set),
	decl(max, map(set(as), map(int, int))),
	decl(wT, map(set(as), map(int, int))),
	decl(w, map(set(as), map(int, int))),
	decl(success, map(set(as), int)),
	decl(msgType,map(set(as), int)),
	decl(pID,map(set(as), int)),
	decl(pInst,map(set(as), int)),
	decl(pt,map(set(as), int)),
	decl(px,map(set(as), int)),
	decl(as,set)],
 	ensures(forall([
	decl(a0,int),
	decl(p1,int),
	decl(p2,int)
       ],
       implies(
	       and([
		    elem(a0,as),
		    elem(p1,ps),
		    elem(p2,ps),
		    ref(decided,p1)=1,
		    ref(decided,p2)=1,
		    ref(inst,p1)=ref(inst,p2),
		    implies(and([
				 ref(k,p1) > card(as)/2,
				 ref(k,p2) > card(as)/2
				]),
			    and([
				 ref(t,p1) =< ref(ref(wT,a0),ref(inst,p1)),
				 ref(t,p2) =< ref(ref(wT,a0), ref(inst,p2))
				])
			   ),
		    0 =< ref(l, p1),
		    0 =< ref(l ,p2)
		   ]),
	       ref(x,p1) = ref(x,p2))
      )),
 par([
	sym(P, ps,
		seq([
						pre(P, and([
					ref(t,P)>0,
					ref(ready,P)=0,
					ref(decided,P)=0,
					ref(ho,P)=0,
					ref(k,P) = 0,
					ref(l,P) = card(as),
					ref(m,P) = 0
				])),
			assign(P,xT,0),
			assign(P,ho,0),
			assign(P,ready,0),
			assign(P,decided,0),
			assign(P,inst,ref(instance,P)),
						assume(P, forall([decl(i,int)],
										and([
											ref(t,i) > 0,
											ref(m,i)=0,
											ref(l,i) = card(as),
											ref(k,i) = 0
										])
							)),
			for(P, Peer, as,
 				seq([
										pre(P, forall([decl(i,int)],
						implies(
									and([
												elem(i,ps),
												here(i)
									 		]),
									and([
									 			ref(ready, i)=0,
												ref(decided, i)=0,
												ref(k,i)=0,
												ref(k,i) + ref(l,i) + ref(m,i) = card(as)
											])
										)
									)),
					assign(P,id,P),
					send(P, e_pid(Peer), pair(0,pair(id,pair(inst,pair(t, 0))))),
					group(skip, 
						seq([
							recv(P, e_pid(Peer), pair(rwT,pair(rw,rsuccess))),
							ite(P,ref(rsuccess,P)=1,
								assign(P,ho,ref(ho,P)+1),
								skip),
							ite(P,ref(xT,P)=<ref(rwT,P),
								seq([
									assign(P,xT,ref(rwT,P)),
									assign(P,x,ref(rw,P))
								]),
								skip)
						]))
				])),
			ite(P,2*ref(ho,P)>card(as),
				seq([
										pre(P, forall([decl(i,int)],
				implies(
							and([
								elem(i,ps),
								ref(decided,i)=1
							]),
		          and([ ref(k,i) > card(as)/2,
		                ref(ho,i) > card(as)/2,
		                ref(ready,i)=1
		             ])
							)
				)),					pre(P, forall([decl(i,int)],
							implies(
									and([
										elem(i,ps),
										here(i)
										]),
		             and([
								 		ref(decided,i)=0,
		                ref(k,i)=0,
		                ref(k,i) + ref(l,i) + ref(m,i) = card(as)
		                ])
								)
					)),
					assign(P,ho,0),
					assign(P,ready,1),
					for(P, Peer, as,
 						seq([
														assume(P, elem(a0, as)),							assume(P, forall([decl(i,int)],
														implies(
																and([
																	elem(i,ps),
																	ref(ready,i)=1,
																	ref(k,i)+ref(l,i) > card(as)/2,
																	ref(ready,P)=1
																]),
																and([
																	ref(t,i) =< ref(xT,P),
																	0 < ref(xT,P)
																])
														)
											)),							assume(P, forall([decl(i,int)],
					implies(
						and([
									elem(i,ps),
									ref(l,i) > card(as)/2
							]),
							or([
									ref(ready,P)=0,
									ref(t,P) < ref(t,i)
								])
							)
				)),							assume(P, forall([decl(i,int)], implies(ref(t,i)=ref(t,P), i=P))),							pre(P, forall([decl(qa,int), decl(qp,int)],
			                          implies(
																	and([
																		elem(qa,as),
																		elem(qp,ps),
																		ref(ready,qp)=1,
																		ref(t,qp) =< ref(ref(wT,qa),ref(inst,qp)),
																		ref(k,qp)+ref(l,qp) > card(as)/2
																		]),
			                             ref(ref(w,qa),ref(inst,qp))=ref(x,qp)
																	 )
												)),							assume(P, implies(
											and([0 < ref(xT,P)]),
											and([
														ref(x,P) = ref(ref(w,a0),ref(inst,P)),
														ref(xT,P) = ref(ref(wT,a0), ref(inst,P))
											])
										)),							pre(P, forall([decl(i,int), decl(j,int)],
			                          implies(
																	and([
																		elem(i,ps),
																		elem(j,as),
																		ref(l,i) > card(as)/2,
																		ref(k,i)=0
																	]),
			                            ref(ref(wT,j),ref(inst,i)) < ref(t,i)
																)
													)),							pre(P, forall([decl(i,int)],
			              	implies(
														and([
															elem(i,ps),
															here(i)
														]),
			                      and([
															ref(ready,i)=1,
			                        ref(decided,i)=0,
			                        ref(ho,i) =< ref(k,i),
			                        ref(k,i) + ref(l,i) + ref(m,i) = card(as)
			                      ])
											   )
			              )),
							send(P, e_pid(Peer), pair(1,pair(id,pair(inst,pair(t,x))))),
							group(skip, 
								seq([
									recv(P, e_pid(Peer), pair(rwT,pair(rw,rsuccess))),
									ite(P,ref(rsuccess,P)=1,
										seq([
											assign(P,ho,ref(ho,P)+1),
											assign(P,k,ref(k,P)+1),
											assign(P,l,ref(l,P)-1)
										]),
										skip)
								]))
						])),
					ite(P,2*ref(ho,P)>card(as),
						seq([
														pre(P, forall([decl(i,int),decl(j,int)],
						   and([
						   implies(
							   and([elem(i,ps),here(i)]),
							   and([
								ref(ready,i)=1,
								ref(ho,i) =< ref(k,i),
								ref(k,i) + ref(l,i) + ref(m,i) = card(as)
							       ])
							  )
						      ])
						  )),
							assign(P,decided,1)
						]),
						skip)
				]),
				skip)
		])),
	sym(A, as,
		seq([
						pre(A, forall([decl(i,int),decl(j,int)], ref(ref(wT,j),i) = 0)),			assume(A, forall([decl(i,int),decl(j,int)], ref(ref(wT,j),i) = 0)),
			while(A, true,
 				seq([
					recv(A, pair(msgType,pair(pID,pair(pInst,pair(pt,px))))),
					ite(A,ref(msgType,A)=0,
						seq([
							assign(A,success,0),
							ite(A,ref(pt,A)>ref(ref(max,A),ref(pInst,A)),
								seq([
									assign(A,max,upd(ref(max,A),ref(pInst,A),ref(pt,A))),
									assign(A,success,1)
								]),
								skip)
						]),
						skip),
					ite(A,ref(msgType,A)=1,
						seq([
							assign(A,success,0),
							ite(A,ref(ref(max,A),ref(pInst,A))=<ref(pt,A),
								seq([
									assign(A,wT,upd(ref(wT,A),ref(pInst,A),ref(pt,A))),
									assign(A,w,upd(ref(w,A),ref(pInst,A),ref(px,A))),
									assign(A,success,1)
								]),
								skip)
						]),
						skip),
					send(A, e_var(pID), pair(ref(ref(wT,A),ref(pInst,A)),pair(ref(ref(w,A),ref(pInst,A)),success)))
				]))

		])),
	skip]),
 sym(A, as,
	while(A, true,
 	seq([
		recv(A, pair(msgType,pair(pID,pair(pInst,pair(pt,px))))),
		ite(A,ref(msgType,A)=0,
			seq([
				assign(A,success,0),
				ite(A,ref(pt,A)>ref(ref(max,A),ref(pInst,A)),
					seq([
						assign(A,max,upd(ref(max,A),ref(pInst,A),ref(pt,A))),
						assign(A,success,1)
					]),
					skip)
			]),
			skip),
		ite(A,ref(msgType,A)=1,
			seq([
				assign(A,success,0),
				ite(A,ref(ref(max,A),ref(pInst,A))=<ref(pt,A),
					seq([
						assign(A,wT,upd(ref(wT,A),ref(pInst,A),ref(pt,A))),
						assign(A,w,upd(ref(w,A),ref(pInst,A),ref(px,A))),
						assign(A,success,1)
					]),
					skip)
			]),
			skip),
		send(A, e_var(pID), pair(ref(ref(wT,A),ref(pInst,A)),pair(ref(ref(w,A),ref(pInst,A)),success)))
	]))
)).